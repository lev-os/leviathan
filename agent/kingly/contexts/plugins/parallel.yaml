# Parallel Development Plugin
# Plugin architecture: Everything is YAML, uses core functionality

plugin:
  name: parallel
  version: 1.0.0
  type: core_plugin
  description: LLM-first parallel development with Claude Code + git worktree
  
# Plugin capabilities using core's functionality  
capabilities:
  - session_management      # Uses core session-manager.js
  - workflow_orchestration  # Uses core workflow-loader.js
  - command_routing        # Uses core command-registry.js
  - constitutional_ai      # Uses core constitutional validators
  - context_synthesis      # Uses core context system

# Commands this plugin adds to registry
commands:
  para_init:
    syntax: "kingly para init <session-id> [streams...]"
    description: "Initialize parallel development session with LLM reasoning"
    whisper:
      strategies:
        - "Create git worktrees for each development stream"
        - "Generate Claude Code spawn commands with specialized contexts"
        - "Setup constitutional AI validation for each stream"
      llm_guidance: "Use session management + git worktree creation + context assignment"
      
  para_status:
    syntax: "kingly para status [session-id]"
    description: "Monitor parallel development streams with AI analysis"
    whisper:
      strategies:
        - "Check git worktree status across all streams"
        - "Analyze stream progress via LLM reasoning"
        - "Identify integration opportunities"
      llm_guidance: "Use workflow loader to check stream contexts + git status analysis"

  para_sync:
    syntax: "kingly para sync <session-id>"
    description: "Synchronize and merge parallel development results"
    whisper:
      strategies:
        - "Constitutional AI validation before merge"
        - "LLM-guided conflict resolution"
        - "Context synthesis across streams"
      llm_guidance: "Use constitutional validators + context synthesis + git merge logic"# Workflows this plugin provides
workflows:
  constitutional_discord_parallel:
    description: "Constitutional AI framework + Discord integration parallel development"
    streams:
      - stream_id: constitutional_ai
        context: contexts/constitutional-framework/core-validators.yaml
        focus: "8-mode psychological system with stress reduction priority"
        
      - stream_id: discord_integration  
        context: contexts/discord-integration/business-intelligence.yaml
        focus: "Jared Discord + Notion RAG + brain/ knowledge system"
        
      - stream_id: master_coordination
        context: contexts/master-coordination/synthesis.yaml
        focus: "Cross-stream pattern synthesis and integration"

# LLM reasoning patterns for this plugin
reasoning_patterns:
  parallel_init:
    prompt: |
      You are initializing a parallel development session. 
      
      Context: User wants to work on multiple related development streams simultaneously using git worktree + Claude Code instances.
      
      Your reasoning should:
      1. Analyze the requested streams for complementary development patterns
      2. Create optimal git worktree structure for isolation
      3. Generate specialized Claude Code spawn commands with appropriate contexts
      4. Setup constitutional AI validation guardrails
      
      Always prioritize: LLM-first reasoning, YAML configuration over code, stress reduction in development process.
      
  stream_monitoring:
    prompt: |
      You are monitoring parallel development streams for a session.
      
      Context: Multiple Claude Code instances are working on related but isolated development streams.
      
      Your reasoning should:
      1. Assess progress across all streams using git status + file analysis
      2. Identify opportunities for cross-stream pattern synthesis  
      3. Detect potential conflicts before they become integration problems
      4. Suggest optimal timing for stream synchronization
      
      Always prioritize: Constitutional compliance, sovereignty preservation, integration readiness.

# Integration with core systems
core_integration:
  session_manager:
    - "Use existing session management for parallel coordination"
    - "Extend session context with stream-specific data"
    
  workflow_loader:
    - "Load stream-specific contexts dynamically"
    - "Support context inheritance across streams"
    
  command_registry:
    - "Register para_* commands with whisper guidance"
    - "Integrate with existing natural language processing"
    
  constitutional_validators:
    - "Apply constitutional AI validation to all streams"
    - "Ensure stress reduction priority across parallel work"

# Dependencies on core functionality
dependencies:
  core_modules:
    - src/session-manager.js
    - src/workflow-loader.js  
    - src/command-registry.js
    - src/constitutional-validators.js
    - src/context-system.js
    
  external_tools:
    - git (for worktree management)
    - claude (Claude Code CLI)
    - Terminal multiplexing (for parallel instances)