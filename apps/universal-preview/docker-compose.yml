version: '3.8'

services:
  # Main platform backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./workspace:/workspace
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    networks:
      - platform-network

  # Frontend React app
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - platform-network

  # PostgreSQL for metadata storage
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=preview_platform
      - POSTGRES_USER=platform
      - POSTGRES_PASSWORD=preview123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - platform-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - platform-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - platform-network

  # Agent sandbox runner
  sandbox-runner:
    build:
      context: ./sandbox
      dockerfile: Dockerfile
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./sandbox-workspace:/workspace
    environment:
      - SANDBOX_MODE=true
      - MAX_EXECUTION_TIME=300
      - MAX_MEMORY=512m
    networks:
      - platform-network

volumes:
  postgres_data:
  redis_data:

networks:
  platform-network:
    driver: bridge