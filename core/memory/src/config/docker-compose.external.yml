version: '3.8'

services:
  # Graphiti gRPC Memory Service (External Neo4j Mode)
  graphiti-service:
    build:
      context: ./graphiti-service
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    environment:
      - NEO4J_URI=${LEV_NEO4J_URI:-bolt://localhost:7687}
      - NEO4J_USERNAME=${LEV_NEO4J_USER:-neo4j}
      - NEO4J_PASSWORD=${LEV_NEO4J_PASSWORD}
      - GRPC_PORT=50051
    restart: unless-stopped
    network_mode: host
    healthcheck:
      test: ["CMD", "python", "-c", "import grpc; grpc.channel_ready_future(grpc.insecure_channel('localhost:50051')).result(timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./graphiti-service/src:/app/src:ro
      - ./graphiti-service/proto:/app/proto:ro

  # Optional: Redis for queue-based communication (future use)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - queue  # Only start with --profile queue

networks:
  default:
    external: true
    name: bridge