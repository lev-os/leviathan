# Leviathan Capability Matrix - Smart Intake Cache
# Auto-generated from consolidation analysis: 2025-06-24

metadata:
  version: "0.1.0"
  last_scan: "2025-06-24"
  consolidation_phase: "0.5"
  scan_method: "consolidation_docs_guided"
  next_refresh: "auto_on_intake"

# === CURRENT PRODUCTION CAPABILITIES ===
core_capabilities:
  
  workflow_orchestration:
    status: "production"
    locations:
      - "agent/src/hybrid-router.js"
      - "agent/docs/features/job-system.md"
    features:
      job_breakdown:
        description: "AI-driven task analysis with complexity scoring"
        implementation: "natural language → structured workflows"
        supports: ["complexity analysis", "time estimation", "task decomposition"]
      multi_tab_coordination:
        description: "3-tab strategy for complex workflows"
        implementation: "intelligent tab allocation (Implementation, Testing, Research)"
        supports: ["1-3 tab optimization", "resource allocation", "coordination strategy"]
      callback_chains:
        description: "Checkpoint-based execution tracking"
        implementation: "stage-based execution with rollback points"
        supports: ["progress tracking", "error recovery", "session continuity"]
    gaps:
      - "no crash recovery/durability"
      - "limited fault tolerance"
      - "no agent swarm coordination"
      
  mcp_integration:
    status: "production"
    locations:
      - "agent/src/index.js"
      - "agent/src/commands/"
    features:
      mcp_tools: 
        count: 18
        categories: ["session management", "workflow execution", "intelligence coordination", "context assembly"]
        tools: ["session-ping", "session-load", "workflow-execute", "ceo-bind", "intelligence-power", "network-intelligence"]
      protocol_compliance:
        description: "Full MCP server implementation"
        supports: ["tool discovery", "session persistence", "context switching"]
    gaps:
      - "no swarm-specific MCP tools"
      - "limited multi-agent coordination via MCP"
      
  multi_agent_coordination:
    status: "limited"
    locations:
      - "agent/src/hybrid-router.js (job system)"
    features:
      job_distribution:
        description: "Multi-tab task distribution"
        implementation: "AI analyzes complexity and assigns to tabs"
        supports: ["3-tab max", "task complexity routing", "tab purpose specialization"]
      ceo_binding:
        description: "Agent switching based on intent"
        implementation: "ceo-bind.js for personality/capability switching"
        supports: ["intent detection", "agent selection", "context transfer"]
    gaps:
      - "no true multi-agent orchestration"
      - "no swarm intelligence"
      - "no work stealing or load balancing"
      - "no specialized agent types beyond tabs"
      - "no fault tolerance for agent failures"

# === PACKAGE ARCHITECTURE ===
package_structure:
  status: "evolving"
  current_packages:
    commands:
      description: "Process management and git worktree operations"
      includes: ["@lev-os/cmd", "worktree-manager", "process-manager"]
      status: "production"
    memory:
      description: "Unified memory interface with multiple backends"
      includes: ["memory-manager", "five memory types", "graphiti bridge"]
      status: "evolving"
    testing:
      description: "Universal testing framework"
      includes: ["plugin validation", "integration testing", "performance benchmarking"]
      status: "production"
    workshop:
      description: "Tool evaluation and intake system"
      includes: ["classification", "integration", "onboarding"]
      status: "production"
  plugins:
    constitutional_ai: "values-based decision making"
    debug: "system monitoring and tracing"
    validation: "consensus and mathematical validation"
    eeps_system: "8-personality system"
  gaps:
    - "no workflow package (planned)"
    - "no intelligence package (planned)"
    - "no orchestration package (planned)"

# === PLANNED ENHANCEMENTS (From Consolidation) ===
planned_capabilities:
  
  bi_directional_flow:
    consolidation_task: "P1T02"
    description: "System can initiate LLM conversations"
    status: "research"
    planned_features:
      - "system-initiated callbacks"
      - "infinite conversation loops with safety"
      - "adaptive optimization based on LLM responses"
      
  pickaxe_integration:
    consolidation_task: "P05T06"
    description: "Durable execution patterns"
    status: "preliminary_analysis"
    planned_features:
      - "fault-tolerant workflow execution"
      - "automatic crash recovery"
      - "event log replay"
      
  flowmind_runtime:
    consolidation_task: "P05T01"
    description: "LLM as runtime concept"
    status: "completed_synthesis"
    planned_features:
      - "semantic control patterns"
      - "when_semantic conditions"
      - "dual LLM architecture"
      
  mcp_multiplexer:
    consolidation_task: "P05T07"
    description: "SSE-based MCP session routing"
    status: "draft_complete"
    planned_features:
      - "225→8 process reduction"
      - "resource optimization"
      - "session multiplexing"

# === KNOWN GAPS (What We DON'T Have) ===
capability_gaps:
  
  true_multi_agent:
    missing:
      - "agent swarm coordination"
      - "specialized agent types (beyond tabs)"
      - "work stealing and load balancing"
      - "circuit breaker patterns for agent failures"
      - "background workers for continuous processing"
    current_workaround: "multi-tab coordination (limited to 3 tabs)"
    
  fault_tolerance:
    missing:
      - "crash recovery for workflows"
      - "state persistence across failures"
      - "automatic retry mechanisms"
      - "graceful degradation"
    current_workaround: "checkpoint-based execution (manual recovery)"
    
  production_orchestration:
    missing:
      - "SPARC-style development modes"
      - "specialized role-based agents"
      - "complex dependency management"
      - "objective decomposition algorithms"
    current_workaround: "job breakdown with manual coordination"

# === INTEGRATION OPPORTUNITY MATRIX ===
# This helps evaluate new tools against specific gaps
integration_opportunities:
  
  multi_agent_coordination:
    priority: "high"
    current_gap: "no true swarm intelligence"
    evaluation_criteria:
      - "specialized agent types"
      - "work stealing patterns"
      - "fault tolerance mechanisms"
      - "background processing"
      
  durable_execution:
    priority: "high" 
    current_gap: "no crash recovery"
    evaluation_criteria:
      - "event log patterns"
      - "state persistence"
      - "automatic retry"
      - "graceful recovery"
      
  production_patterns:
    priority: "medium"
    current_gap: "limited production orchestration"
    evaluation_criteria:
      - "specialized modes/roles"
      - "complex dependency handling"
      - "resource optimization"
      - "performance monitoring"

# === CACHE MAINTENANCE ===
maintenance:
  auto_refresh_triggers:
    - "intake analysis starts"
    - "consolidation task completed"
    - "package structure changes"
  manual_refresh_command: "lev cache refresh"
  backup_location: "workshop/cache/backups/"
  
# === USAGE INSTRUCTIONS ===
usage:
  intake_process:
    1: "Load this cache to understand current capabilities"
    2: "Analyze target repository for features"
    3: "Generate targeted scan queries based on gaps"
    4: "Selectively scan Leviathan for specific overlaps"
    5: "Update cache with new insights"
  scan_efficiency:
    focus_areas: ["multi-agent", "fault tolerance", "orchestration patterns"]
    skip_areas: ["basic MCP tools", "session management", "simple job coordination"]